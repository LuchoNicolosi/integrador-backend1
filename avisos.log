[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:78] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:18:27] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:78] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:19:29] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:20:42] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:78] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:20:43] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:21:12] [ INFO ] [OdontologoDAOH2:78] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:21:13] [ INFO ] [OdontologoDAOH2:41] Tabla creada con exito!
[2023-08-16 22:21:13] [ INFO ] [OdontologoDAOH2:58] se registro un odontologo!
[2023-08-16 22:22:09] [ ERROR] [OdontologoDAOH2:80] error al listar los odontologos
[2023-08-16 22:24:18] [ ERROR] [OdontologoDAOH2:65] Error al registrar el usuario!
[2023-08-16 22:24:18] [ ERROR] [OdontologoDAOH2:80] error al listar los odontologos
[2023-08-16 22:29:27] [ ERROR] [OdontologoDAOH2:65] Error al registrar el usuario!
[2023-08-16 22:31:48] [ ERROR] [OdontologoDAOH2:80] error al listar los odontologos
[2023-08-16 22:43:09] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:43:09] [ INFO ] [OdontologoDAOH2:42] Tabla creada con exito!
[2023-08-16 22:43:09] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:43:09] [ INFO ] [OdontologoDAOH2:79] []
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:42] Tabla creada con exito!
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:59] se registro un odontologo!
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:45:01] [ INFO ] [OdontologoDAOH2:79] [Odontologo(nMatricula=diaz)]
[2023-08-16 22:47:47] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:47:47] [ INFO ] [OdontologoDAOH2:79] [Odontologo(nMatricula=diaz)]
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:25] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:50:26] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=Leonardo), Odontologo(nMatricula=Luciano), Odontologo(nMatricula=Pepo), Odontologo(nMatricula=Pepa)]
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:15] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:51:53] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:53] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:51:53] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:51:53] [ INFO ] [OdontologoDAOH2:80] []
[2023-08-16 22:57:28] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:57:29] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 22:57:29] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:57:29] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:57:56] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:57:56] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 22:58:22] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 22:58:22] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=insua), Odontologo(nMatricula=insua)]
[2023-08-16 23:02:11] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:02:11] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 23:02:11] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:02:11] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:02:17] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:02:17] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=insua)]
[2023-08-16 23:02:38] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:02:38] [ ERROR] [OdontologoDAOH2:67] Error al registrar el usuario!
[2023-08-16 23:04:36] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:04:36] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:07:28] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:07:28] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 23:07:28] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:07:28] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:07:41] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:07:41] [ ERROR] [OdontologoDAOH2:67] Error al registrar el usuario!
[2023-08-16 23:07:54] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:07:54] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=insua)]
[2023-08-16 23:08:38] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:09:29] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:09:29] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 23:09:29] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:09:29] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:09:33] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:09:33] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=insua)]
[2023-08-16 23:10:46] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:10:46] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:10:55] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:10:55] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=insua), Odontologo(nMatricula=NICOLOSI)]
[2023-08-16 23:12:35] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:12:35] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-16 23:12:35] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:12:35] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:12:39] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:12:39] [ INFO ] [OdontologoDAOH2:60] se registro un odontologo!
[2023-08-16 23:12:44] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-16 23:12:44] [ INFO ] [OdontologoDAOH2:80] [Odontologo(nMatricula=42899873), Odontologo(nMatricula=42899873)]
[2023-08-21 00:04:13] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-21 00:04:13] [ INFO ] [OdontologoDAOH2:43] Tabla creada con exito!
[2023-08-21 00:04:14] [ INFO ] [OdontologoDAOH2:29] Conexion exitosa a la db.
[2023-08-21 00:04:14] [ INFO ] [OdontologoDAOH2:80] []
[2023-08-21 00:17:15] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:17:15] [ INFO ] [PacienteDAOH2:36] Tabla creada con exito!
[2023-08-21 00:17:15] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:17:15] [ INFO ] [PacienteDAOH2:36] Tabla creada con exito!
[2023-08-21 00:17:16] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:17:16] [ INFO ] [PacienteDAOH2:36] Tabla creada con exito!
[2023-08-21 00:17:16] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:17:16] [ INFO ] [PacienteDAOH2:56] SE REGISTRO UN PACIENTE!
[2023-08-21 00:17:16] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:19:45] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:19:45] [ INFO ] [PacienteDAOH2:36] Tabla creada con exito!
[2023-08-21 00:19:45] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:19:45] [ INFO ] [PacienteDAOH2:56] SE REGISTRO UN PACIENTE!
[2023-08-21 00:19:45] [ INFO ] [PacienteDAOH2:24] Conexion exitosa a la db.
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:58] SE REGISTRO UN PACIENTE!
[2023-08-21 00:23:30] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:57] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:57] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:57] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:57] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:57] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:58] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:23:58] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:23:58] [ INFO ] [PacienteDAOH2:58] SE REGISTRO UN PACIENTE!
[2023-08-21 00:23:58] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:36] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:36] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:24:36] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:36] [ INFO ] [PacienteDAOH2:58] SE REGISTRO UN PACIENTE!
[2023-08-21 00:24:36] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:42] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:42] [ INFO ] [PacienteDAOH2:38] Tabla creada con exito!
[2023-08-21 00:24:42] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:42] [ INFO ] [PacienteDAOH2:58] SE REGISTRO UN PACIENTE!
[2023-08-21 00:24:42] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:51] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:24:51] [ INFO ] [PacienteDAOH2:78] [Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22)]
[2023-08-21 00:25:02] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:02] [ INFO ] [PacienteDAOH2:78] [Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22)]
[2023-08-21 00:25:33] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:33] [ INFO ] [PacienteDAOH2:77] [Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22)]
[2023-08-21 00:25:50] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:50] [ INFO ] [PacienteDAOH2:57] SE REGISTRO UN PACIENTE!
[2023-08-21 00:25:50] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:53] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:53] [ INFO ] [PacienteDAOH2:57] SE REGISTRO UN PACIENTE!
[2023-08-21 00:25:53] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:56] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:25:56] [ ERROR] [PacienteDAOH2:64] algo salio mal
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de indice de Unicidad ó Clave primaria: "PRIMARY KEY ON PUBLIC.PACIENTE(ID) ( /* key:4 */ 4, 'SDAS', 'ASDSAD', 'savio 3280', '39427236', DATE '2023-05-22')"
Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.PACIENTE(ID) ( /* key:4 */ 4, 'SDAS', 'ASDSAD', 'savio 3280', '39427236', DATE '2023-05-22')"; SQL statement:
INSERT INTO PACIENTE VALUES(?, ?,?,?,?,?) [23505-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:508)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:227)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:254)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:56)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:13)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 00:26:02] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:26:02] [ INFO ] [PacienteDAOH2:57] SE REGISTRO UN PACIENTE!
[2023-08-21 00:26:02] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:26:08] [ INFO ] [PacienteDAOH2:26] Conexion exitosa a la db.
[2023-08-21 00:26:08] [ INFO ] [PacienteDAOH2:77] [Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22), Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22), Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22), Paciente(domicilio=savio 3280, dni=39427236, fechaAlta=2023-05-22)]
[2023-08-21 02:16:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:16:52] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:16:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:16:52] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:17:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:17:11] [ ERROR] [PacienteDAOH2:41] algo salio mal
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PACIENTE" no encontrada
Table "PACIENTE" not found; SQL statement:
INSERT INTO PACIENTE VALUES(?, ?,?,?,?,?) [42102-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8561)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8532)
	at org.h2.command.Parser.readTableOrView(Parser.java:8521)
	at org.h2.command.Parser.readTableOrView(Parser.java:8487)
	at org.h2.command.Parser.parseInsert(Parser.java:1663)
	at org.h2.command.Parser.parsePrepared(Parser.java:822)
	at org.h2.command.Parser.parse(Parser.java:697)
	at org.h2.command.Parser.parse(Parser.java:669)
	at org.h2.command.Parser.prepareCommand(Parser.java:577)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:78)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:50)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:480)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:30)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 02:20:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:20:06] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:20:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:20:06] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:20:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:20:15] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:20:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:20:15] [ ERROR] [PacienteDAOH2:41] algo salio mal
org.h2.jdbc.JdbcSQLDataException: Imposible interpretar la constante "DATE" "20-12-2023"
Cannot parse "DATE" constant "20-12-2023"; SQL statement:
INSERT INTO PACIENTE VALUES(?, ?,?,?,?,?) [22007-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:518)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.value.ValueDate.parse(ValueDate.java:53)
	at org.h2.value.Value.convertToDate(Value.java:1875)
	at org.h2.value.Value.convertTo(Value.java:1168)
	at org.h2.value.Value.convertForAssignTo(Value.java:1113)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:369)
	at org.h2.table.Table.convertInsertRow(Table.java:936)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)
Caused by: java.lang.IllegalArgumentException: 20-12-2023
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:194)
	at org.h2.value.ValueDate.parse(ValueDate.java:51)
	... 13 more

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:506)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:227)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:254)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:37)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 02:23:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:23:41] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:23:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:23:41] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:23:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:23:43] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:23:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:23:43] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 02:24:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:24:46] [ ERROR] [db:41] Error al registrar el usuario!
[2023-08-21 02:25:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:25:21] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:25:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:25:22] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:25:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:25:32] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:25:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:25:32] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 02:26:16] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:26:16] [ ERROR] [PacienteDAOH2:41] algo salio mal
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de indice de Unicidad ó Clave primaria: "PRIMARY KEY ON PUBLIC.PACIENTE(ID) ( /* key:1 */ 1, 'carlos', 'lopez', 'ohiggins259', '123456789', '20-12-2023')"
Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.PACIENTE(ID) ( /* key:1 */ 1, 'carlos', 'lopez', 'ohiggins259', '123456789', '20-12-2023')"; SQL statement:
INSERT INTO PACIENTE VALUES(?,?,?,?,?,?) [23505-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:508)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:227)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:254)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:37)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 02:27:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:22] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:27:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:22] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:27:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:25] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:27:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:25] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 02:27:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:56] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:27:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:56] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 02:27:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:59] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:27:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:27:59] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:33:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:30] [ INFO ] [db:23] Tabla creada con exito!
[2023-08-21 02:33:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:30] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 02:33:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:36] [ INFO ] [PacienteDAOH2:21] Tabla creada con exito!
[2023-08-21 02:33:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:36] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 02:33:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:43] [ INFO ] [TurnoDAOH2:21] Tabla creada con exito!
[2023-08-21 02:33:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 02:33:43] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "TURNO" no encontrada
Table "TURNO" not found; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?); [42102-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8561)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:8532)
	at org.h2.command.Parser.readTableOrView(Parser.java:8521)
	at org.h2.command.Parser.readTableOrView(Parser.java:8487)
	at org.h2.command.Parser.parseInsert(Parser.java:1663)
	at org.h2.command.Parser.parsePrepared(Parser.java:822)
	at org.h2.command.Parser.parse(Parser.java:697)
	at org.h2.command.Parser.parse(Parser.java:669)
	at org.h2.command.Parser.prepareCommand(Parser.java:577)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 03:02:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:32] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 03:02:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:32] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 03:02:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:37] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 03:02:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:37] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 03:02:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:40] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:02:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:02:40] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Usuario.getId()" because the return value of "com.grupo4.integrador.entidades.Turno.getPaciente()" is null
[2023-08-21 03:04:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:04:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:04:56] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:04:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:04:56] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because the return value of "com.grupo4.integrador.entidades.Turno.getPaciente()" is null
[2023-08-21 03:05:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:05:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:06:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:07:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:07:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:37] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 03:11:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:37] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 03:11:42] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:42] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 03:11:42] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:42] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 03:11:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:50] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:11:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:11:50] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because the return value of "com.grupo4.integrador.entidades.Turno.getPaciente()" is null
[2023-08-21 03:49:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:49:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:11] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 03:50:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:11] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 03:50:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:14] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 03:50:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:14] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 03:50:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:17] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:50:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:50:17] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because the return value of "com.grupo4.integrador.entidades.Turno.getPaciente()" is null
[2023-08-21 03:53:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:53:44] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:53:44] [ DEBUG] [TurnoDAOH2:30] com.grupo4.integrador.entidades.Turno@52cc9568
[2023-08-21 03:53:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:53:44] [ ERROR] [TurnoDAOH2:41] Error al registrar el turno!
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because the return value of "com.grupo4.integrador.entidades.Turno.getPaciente()" is null
[2023-08-21 03:54:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:54:26] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:58:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:58:51] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 03:58:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 03:58:51] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:00:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:12] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 04:00:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:12] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 04:00:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:15] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 04:00:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:15] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 04:00:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:19] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:00:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:00:19] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:08:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:08:09] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:08:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:08:09] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:08:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:09:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:09:26] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 04:09:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:09:26] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 04:09:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:09:29] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 04:09:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:09:29] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 04:09:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:23] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 04:15:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:23] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 04:15:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:26] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 04:15:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:26] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 04:15:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:28] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:15:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:15:28] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:27:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:01] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:01] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 04:28:01] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:01] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 04:28:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:03] [ INFO ] [PacienteDAOH2:21] Tabla paciente creada con exito!
[2023-08-21 04:28:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:03] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 04:28:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:10] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:28:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:28:10] [ ERROR] [TurnoDAOH2:40] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:30:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:30:06] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:30:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:30:06] [ ERROR] [TurnoDAOH2:43] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTEID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 04:31:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:31:38] [ INFO ] [TurnoDAOH2:21] Tabla turno creada con exito!
[2023-08-21 04:31:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 04:31:38] [ INFO ] [TurnoDAOH2:40] se registro un turno!
[2023-08-21 13:27:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 13:27:55] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 13:27:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 13:27:55] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 13:28:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 13:28:56] [ INFO ] [TurnoDAOH2:24] Tabla turno creada con exito!
[2023-08-21 13:28:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 13:28:56] [ INFO ] [TurnoDAOH2:41] se registro un turno!
[2023-08-21 13:29:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 13:29:11] [ ERROR] [TurnoDAOH2:44] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de indice de Unicidad ó Clave primaria: "PRIMARY KEY ON PUBLIC.TURNO(TURNOID) ( /* key:10 */ 10, 2, 2, '2023-05-10')"
Unique index or primary key violation: "PRIMARY KEY ON PUBLIC.TURNO(TURNOID) ( /* key:10 */ 10, 2, 2, '2023-05-10')"; SQL statement:
INSERT INTO TURNO VALUES(?,?,?,?) [23505-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.mvstore.db.MVPrimaryIndex.add(MVPrimaryIndex.java:120)
	at org.h2.mvstore.db.MVTable.addRow(MVTable.java:519)
	at org.h2.command.dml.Insert.insertRows(Insert.java:174)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-21 16:27:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:27:14] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:27:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:27:14] [ ERROR] [db:40] Error al registrar el usuario!
[2023-08-21 16:28:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:28:46] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:28:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:28:46] [ ERROR] [db:40] Error al registrar el odontologo!
[2023-08-21 16:32:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:34:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:34:45] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:34:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:34:45] [ INFO ] [db:36] se registro un odontologo!
[2023-08-21 16:34:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:34:55] [ INFO ] [db:36] se registro un odontologo!
[2023-08-21 16:34:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:34:57] [ INFO ] [db:36] se registro un odontologo!
[2023-08-21 16:41:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:41:18] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:41:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:41:18] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 16:41:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:41:20] [ INFO ] [db:37] se registro un odontologo!
[2023-08-21 16:43:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:43:25] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:43:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:43:25] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:43:27] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:43:27] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:43:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:43:28] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:44:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:44:51] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:44:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:44:51] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:44:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:44:53] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:44:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:44:57] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:45:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:17] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:45:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:17] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:45:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:19] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:45:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:19] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:45:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:20] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:45:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:45:22] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:47:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:47:47] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:47:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:47:47] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:48:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:48:07] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:48:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:48:34] [ INFO ] [PacienteDAOH2:22] Tabla paciente creada con exito!
[2023-08-21 16:48:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:48:34] [ ERROR] [PacienteDAOH2:42] algo salio mal
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO PACIENTE VALUES(?,?,?,?,?) [21002-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:583)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:78)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:50)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:480)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:31)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 16:52:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:10] [ INFO ] [PacienteDAOH2:22] Tabla paciente creada con exito!
[2023-08-21 16:52:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:10] [ ERROR] [PacienteDAOH2:42] algo salio mal
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "FECHA_ALTA" no encontrada
Column "FECHA_ALTA" not found; SQL statement:
INSERT INTO PACIENTE(nombre,apellido,domicilio,dni,fecha_alta) VALUES(?,?,?,?,?) [42122-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1300)
	at org.h2.command.Parser.parseColumnList(Parser.java:1285)
	at org.h2.command.Parser.parseInsert(Parser.java:1672)
	at org.h2.command.Parser.parsePrepared(Parser.java:822)
	at org.h2.command.Parser.parse(Parser.java:697)
	at org.h2.command.Parser.parse(Parser.java:669)
	at org.h2.command.Parser.prepareCommand(Parser.java:577)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:78)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:50)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:480)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:31)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 16:52:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:28] [ INFO ] [PacienteDAOH2:22] Tabla paciente creada con exito!
[2023-08-21 16:52:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:28] [ ERROR] [PacienteDAOH2:42] algo salio mal
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "FECHA_ALTA" no encontrada
Column "FECHA_ALTA" not found; SQL statement:
INSERT INTO PACIENTE(nombre,apellido,domicilio,dni,fecha_alta) VALUES(?,?,?,?,?) [42122-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1300)
	at org.h2.command.Parser.parseColumnList(Parser.java:1285)
	at org.h2.command.Parser.parseInsert(Parser.java:1672)
	at org.h2.command.Parser.parsePrepared(Parser.java:822)
	at org.h2.command.Parser.parse(Parser.java:697)
	at org.h2.command.Parser.parse(Parser.java:669)
	at org.h2.command.Parser.prepareCommand(Parser.java:577)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:78)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:50)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:480)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:31)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 16:52:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:33] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:52:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:52:33] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:58:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:58:44] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 16:58:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:58:44] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:59:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:59:11] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 16:59:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:59:17] [ INFO ] [PacienteDAOH2:22] Tabla paciente creada con exito!
[2023-08-21 16:59:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 16:59:17] [ ERROR] [PacienteDAOH2:42] algo salio mal
org.h2.jdbc.JdbcSQLDataException: Valor Invalido "6" para el parametro "parameterIndex"
Invalid value "6" for parameter "parameterIndex" [90008-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:646)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1395)
	at org.h2.jdbc.JdbcPreparedStatement.setString(JdbcPreparedStatement.java:378)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:36)
	at com.grupo4.integrador.daos.implementaciones.PacienteDAOH2.registrar(PacienteDAOH2.java:15)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:21)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-21 17:00:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:00:19] [ INFO ] [db:23] Tabla Odontologo creada con exito!
[2023-08-21 17:00:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:00:19] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 17:00:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:00:23] [ INFO ] [PacienteDAOH2:22] Tabla paciente creada con exito!
[2023-08-21 17:00:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:00:23] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 17:00:42] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:00:42] [ INFO ] [PacienteDAOH2:38] SE REGISTRO UN PACIENTE!
[2023-08-21 17:01:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:15] [ INFO ] [db:38] se registro un odontologo!
[2023-08-21 17:01:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:26] [ INFO ] [TurnoDAOH2:25] Tabla turno creada con exito!
[2023-08-21 17:01:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:26] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:01:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:33] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:01:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:37] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:01:42] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:01:42] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:02:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:02:08] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:02:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:02:17] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 17:02:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 17:02:21] [ INFO ] [TurnoDAOH2:42] se registro un turno!
[2023-08-21 20:33:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:24:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:24:00] [ INFO ] [db:43] se registro un odontologo!
[2023-08-21 21:24:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:24:03] [ INFO ] [PacienteDAOH2:37] SE REGISTRO UN PACIENTE!
[2023-08-21 21:24:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:24:11] [ INFO ] [TurnoDAOH2:43] se registro un turno!
[2023-08-21 21:35:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:35:37] [ INFO ] [db:43] se registro un odontologo!
[2023-08-21 21:35:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:35:43] [ INFO ] [PacienteDAOH2:37] SE REGISTRO UN PACIENTE!
[2023-08-21 21:35:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:35:46] [ INFO ] [TurnoDAOH2:43] se registro un turno!
[2023-08-21 21:50:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:50:04] [ INFO ] [db:30] se registro un odontologo!
[2023-08-21 21:50:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:50:07] [ INFO ] [PacienteDAOH2:27] SE REGISTRO UN PACIENTE!
[2023-08-21 21:50:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-21 21:50:09] [ INFO ] [TurnoDAOH2:33] se registro un turno!
[2023-08-22 16:03:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:03:44] [ INFO ] [db:49] []
[2023-08-22 16:04:02] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:04:02] [ INFO ] [db:30] se registro un odontologo!
[2023-08-22 16:04:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:04:05] [ INFO ] [db:49] [Odontologo(nMatricula=lopez)]
[2023-08-22 16:04:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:04:14] [ INFO ] [db:30] se registro un odontologo!
[2023-08-22 16:04:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:04:23] [ INFO ] [db:30] se registro un odontologo!
[2023-08-22 16:04:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:04:32] [ INFO ] [db:49] [Odontologo(nMatricula=lopez), Odontologo(nMatricula=lopez), Odontologo(nMatricula=ramirez)]
[2023-08-22 16:48:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:48:34] [ INFO ] [db:50] []
[2023-08-22 16:48:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:48:38] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 16:48:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:48:41] [ INFO ] [db:50] [Odontologo(nMatricula=ramirez)]
[2023-08-22 16:52:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:52:32] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 16:52:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:52:36] [ INFO ] [db:50] [Odontologo(nMatricula=ramirez)]
[2023-08-22 16:56:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:56:59] [ INFO ] [PacienteDAOH2:27] SE REGISTRO UN PACIENTE!
[2023-08-22 16:57:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:57:08] [ INFO ] [PacienteDAOH2:44] [Paciente(domicilio=ohiggins 90, dni=20459965, fechaAlta=20-12-2023)]
[2023-08-22 16:59:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:59:22] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 16:59:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 16:59:30] [ INFO ] [db:50] [Odontologo(nMatricula=lopez)]
[2023-08-22 17:09:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:09:18] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:09:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:09:20] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:09:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:09:22] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:09:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:09:23] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:17:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:17:18] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:17:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:17:49] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 17:17:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 17:17:57] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:25:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:25:49] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:26:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:26:04] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:26:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:26:08] [ INFO ] [db:66] OdontologoId: 1
[2023-08-22 18:26:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:26:14] [ INFO ] [db:66] OdontologoId: 2
[2023-08-22 18:26:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:26:52] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:26:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:26:58] [ INFO ] [db:66] OdontologoId: 3
[2023-08-22 18:27:02] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:27:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:27:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:27:55] [ ERROR] [db:69] Usuario no encontrado.
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 18:28:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:28:37] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:28:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:28:43] [ INFO ] [db:67] OdontologoId: 1
[2023-08-22 18:28:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:28:52] [ INFO ] [db:67] OdontologoId: 1
[2023-08-22 18:29:01] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:29:01] [ ERROR] [db:69] Usuario no encontrado.
java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 18:39:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:39:58] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:40:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:40:07] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:40:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:40:11] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:40:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:40:18] [ INFO ] [PacienteDAOH2:65] PacienteId > 1
[2023-08-22 18:40:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:40:22] [ INFO ] [PacienteDAOH2:65] PacienteId > 2
[2023-08-22 18:40:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:40:26] [ ERROR] [PacienteDAOH2:67] Paciente no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-22 18:47:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:47:47] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:47:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:47:52] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:47:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:47:57] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:48:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:48:04] [ INFO ] [db:67] OdontologoId: 2
[2023-08-22 18:48:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:48:23] [ INFO ] [db:67] OdontologoId: 2
[2023-08-22 18:48:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:48:23] [ INFO ] [db:80] Odontologo eliminado - ID >
[2023-08-22 18:49:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:49:26] [ INFO ] [db:67] OdontologoId: 1
[2023-08-22 18:49:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:49:26] [ INFO ] [db:80] Odontologo eliminado - ID >
[2023-08-22 18:53:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:12] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:53:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:22] [ INFO ] [db:31] se registro un odontologo!
[2023-08-22 18:53:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:25] [ INFO ] [db:50] [Odontologo(nMatricula=abc-10-a), Odontologo(nMatricula=abc-10-a)]
[2023-08-22 18:53:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:33] [ INFO ] [db:67] OdontologoId: 2
[2023-08-22 18:53:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:39] [ INFO ] [db:67] OdontologoId: 2
[2023-08-22 18:53:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:39] [ INFO ] [db:80] Odontologo eliminado - ID >2
[2023-08-22 18:53:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:53:41] [ INFO ] [db:50] [Odontologo(nMatricula=abc-10-a)]
[2023-08-22 18:54:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:00] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:54:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:10] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:54:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:13] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:54:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:20] [ INFO ] [PacienteDAOH2:65] PacienteId: 2
[2023-08-22 18:54:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:24] [ ERROR] [PacienteDAOH2:67] Paciente no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-22 18:54:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:33] [ INFO ] [PacienteDAOH2:65] PacienteId: 1
[2023-08-22 18:54:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:37] [ INFO ] [db:67] OdontologoId: 1
[2023-08-22 18:54:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:37] [ INFO ] [db:80] Odontologo eliminado - ID >1
[2023-08-22 18:54:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:41] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:54:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:43] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:54:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:47] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 18:54:47] [ ERROR] [db:85] Odontologo no encontrado.
[2023-08-22 18:54:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:54:50] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:55:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:55:05] [ INFO ] [PacienteDAOH2:65] PacienteId: 1
[2023-08-22 18:55:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:55:19] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 18:55:19] [ ERROR] [db:85] Odontologo no encontrado.
[2023-08-22 18:56:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:15] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:56:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:21] [ INFO ] [PacienteDAOH2:31] SE REGISTRO UN PACIENTE!
[2023-08-22 18:56:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:23] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:56:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:30] [ INFO ] [PacienteDAOH2:65] PacienteId: 1
[2023-08-22 18:56:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:35] [ INFO ] [PacienteDAOH2:65] PacienteId: 2
[2023-08-22 18:56:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:41] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:56:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:56:55] [ INFO ] [PacienteDAOH2:65] PacienteId: 1
[2023-08-22 18:57:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:57:03] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 18:57:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:57:08] [ INFO ] [PacienteDAOH2:65] PacienteId: 1
[2023-08-22 18:57:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:57:08] [ INFO ] [PacienteDAOH2:79] Paciente eliminado - ID >1
[2023-08-22 18:57:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 18:57:14] [ INFO ] [PacienteDAOH2:48] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 21:10:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:43] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:10:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:43] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:10:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:49] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:10:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:49] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:10:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:53] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:10:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:10:53] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:52:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:09] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:52:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:17] [ INFO ] [db:33] se registro un odontologo!
[2023-08-22 21:52:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:22] [ INFO ] [db:52] [Odontologo(nMatricula=abc-10-a), Odontologo(nMatricula=abc-10-a)]
[2023-08-22 21:52:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:28] [ INFO ] [db:69] OdontologoId: 2
[2023-08-22 21:52:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:33] [ ERROR] [db:71] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 21:52:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:54] [ INFO ] [db:69] OdontologoId: 2
[2023-08-22 21:52:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:54] [ INFO ] [db:69] OdontologoId: 2
[2023-08-22 21:52:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:54] [ INFO ] [db:82] Odontologo eliminado - ID >2
[2023-08-22 21:52:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:52:58] [ INFO ] [db:52] [Odontologo(nMatricula=abc-10-a)]
[2023-08-22 21:53:02] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:02] [ ERROR] [db:71] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-22 21:53:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:07] [ INFO ] [db:69] OdontologoId: 1
[2023-08-22 21:53:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:07] [ INFO ] [db:69] OdontologoId: 1
[2023-08-22 21:53:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:07] [ INFO ] [db:82] Odontologo eliminado - ID >1
[2023-08-22 21:53:11] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:11] [ INFO ] [db:52] []
[2023-08-22 21:53:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:18] [ INFO ] [PacienteDAOH2:32] SE REGISTRO UN PACIENTE!
[2023-08-22 21:53:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:23] [ INFO ] [PacienteDAOH2:32] SE REGISTRO UN PACIENTE!
[2023-08-22 21:53:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:26] [ INFO ] [PacienteDAOH2:49] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023), Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-22 21:53:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:30] [ INFO ] [PacienteDAOH2:66] PacienteId: 1
[2023-08-22 21:53:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:34] [ INFO ] [PacienteDAOH2:66] PacienteId: 2
[2023-08-22 21:53:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:39] [ ERROR] [PacienteDAOH2:68] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-22 21:53:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:43] [ INFO ] [PacienteDAOH2:66] PacienteId: 1
[2023-08-22 21:53:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:43] [ INFO ] [PacienteDAOH2:66] PacienteId: 1
[2023-08-22 21:53:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:43] [ INFO ] [PacienteDAOH2:80] Paciente eliminado - ID >1
[2023-08-22 21:53:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:48] [ ERROR] [PacienteDAOH2:68] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-22 21:53:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-22 21:53:50] [ INFO ] [PacienteDAOH2:49] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-23 20:56:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 20:56:50] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 20:56:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 20:56:56] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 21:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:00:18] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:00:18] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:00:18] [ INFO ] [TurnoRepository:32] se registro un turno!
[2023-08-23 21:01:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:01:35] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 21:01:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:01:38] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 21:01:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:01:40] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:01:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:01:40] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:01:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:01:40] [ INFO ] [TurnoRepository:32] se registro un turno!
[2023-08-23 21:02:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:02:00] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:02:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:02:00] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-23 21:25:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:25:24] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 21:25:27] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:25:27] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 21:25:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:25:33] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:25:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:25:33] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:25:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:25:33] [ ERROR] [TurnoRepository:35] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO(paciente_id,odontologo_id,fecha_hora) VALUES(?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-23 21:26:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:26:00] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:26:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:26:00] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:26:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:26:00] [ ERROR] [TurnoRepository:35] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO(paciente_id,odontologo_id,fecha_hora) VALUES(?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-23 21:27:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:27:18] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:27:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:27:18] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:27:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:27:18] [ ERROR] [TurnoRepository:35] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO(paciente_id,odontologo_id,fecha_hora) VALUES(?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-23 21:28:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:28:57] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:28:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:28:57] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:28:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:28:57] [ ERROR] [TurnoRepository:35] Error al registrar el turno!
org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: Violación de una restricción de Integridad Referencial: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"
Referential integrity constraint violation: "CONSTRAINT_4C: PUBLIC.TURNO FOREIGN KEY(PACIENTE_ID) REFERENCES PUBLIC.PACIENTE(ID) (0)"; SQL statement:
INSERT INTO TURNO(paciente_id,odontologo_id,fecha_hora) VALUES(?,?,?) [23506-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:311)
	at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:252)
	at org.h2.table.Table.fireConstraints(Table.java:1200)
	at org.h2.table.Table.fireAfterRow(Table.java:1218)
	at org.h2.command.dml.Insert.insertRows(Insert.java:188)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:408)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

[2023-08-23 21:32:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:32:10] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 21:32:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:32:19] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 21:32:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:32:28] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:32:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:32:28] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:32:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:32:28] [ INFO ] [TurnoRepository:32] se registro un turno!
[2023-08-23 21:42:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:31] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 21:42:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:35] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 21:42:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:39] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:42:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:39] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 21:42:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:39] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 21:42:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:47] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 21:42:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:42:47] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-23 21:43:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:43:36] [ ERROR] [PacienteRepository:68] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-23 21:43:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 21:43:36] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:38:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:29] [ ERROR] [PacienteRepository:68] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-23 22:38:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:29] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-23 22:38:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:32] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 22:38:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:37] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 22:38:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:41] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:38:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:41] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:38:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:38:41] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:39:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:39:21] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:39:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:39:21] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:39:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:39:21] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:41:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:41:50] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 22:41:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:41:53] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 22:41:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:41:56] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:41:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:41:56] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:41:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:41:56] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:48:01] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:48:01] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 22:48:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:48:04] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 22:48:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:48:07] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:48:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:48:07] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:48:07] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:48:07] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:48:07] [ INFO ] [TurnoControlador:36] Se pudo crear el turno
[2023-08-23 22:49:16] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:49:16] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 22:49:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:49:18] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 22:49:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:49:23] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:49:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:49:23] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:49:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:49:23] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:49:23] [ INFO ] [TurnoControlador:36] Se pudo crear el turno
[2023-08-23 22:52:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:52:52] [ INFO ] [db:31] se registro un odontologo!
[2023-08-23 22:52:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:52:55] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-23 22:52:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:52:59] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-23 22:52:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:52:59] [ INFO ] [db:67] OdontologoId: 1
[2023-08-23 22:52:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-23 22:52:59] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-23 22:52:59] [ INFO ] [TurnoControlador:36] Se pudo crear el turno
[2023-08-25 16:07:15] [ ERROR] [db:52] error al listar los odontologos
[2023-08-25 16:10:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 16:10:09] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 16:10:09] [ INFO ] [OdontologoControlador:36] Odontologo creado.
[2023-08-25 17:15:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:15:12] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:15:12] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:15:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:15:23] [ INFO ] [db:50] [Odontologo(nMatricula=null)]
[2023-08-25 17:15:23] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 17:22:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:22:15] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:22:15] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:22:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:22:21] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:22:21] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:22:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:22:24] [ INFO ] [db:50] [Odontologo(nMatricula=null), Odontologo(nMatricula=null)]
[2023-08-25 17:22:24] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 17:22:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:22:29] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-25 17:22:29] [ INFO ] [OdontologoControlador:69] odontologo encontrado.
[2023-08-25 17:25:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:25:33] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-25 17:25:33] [ INFO ] [OdontologoControlador:69] odontologo encontrado.
[2023-08-25 17:28:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:13] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-25 17:28:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:36] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-25 17:28:39] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:39] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:28:39] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:28:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:47] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:28:47] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:28:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:50] [ INFO ] [db:50] [Odontologo(nMatricula=null), Odontologo(nMatricula=null)]
[2023-08-25 17:28:50] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 17:28:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:28:59] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 17:28:59] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-25 17:29:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:29:06] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-25 17:29:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:29:12] [ INFO ] [db:67] OdontologoId: 2
[2023-08-25 17:29:12] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-25 17:29:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:29:34] [ INFO ] [db:50] [Odontologo(nMatricula=null), Odontologo(nMatricula=null)]
[2023-08-25 17:29:34] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 17:29:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:29:51] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:29:51] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:30:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:30:49] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:30:49] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:31:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:31:20] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:31:20] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:33:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:33:26] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:33:26] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:34:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:34:15] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:34:15] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:34:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:34:37] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:34:37] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:34:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:34:52] [ INFO ] [db:50] [Odontologo(nMatricula=null), Odontologo(nMatricula=null), Odontologo(nMatricula=null), Odontologo(nMatricula=null)]
[2023-08-25 17:34:52] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 17:34:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:34:59] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:34:59] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:36:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:36:51] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:36:51] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 17:39:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:39:04] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:39:04] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:39:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:39:48] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:39:48] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:39:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:39:54] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:39:54] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:40:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:40:51] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:40:51] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:42:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:42:08] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:42:08] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:42:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:42:30] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:42:30] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:42:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:42:32] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:42:32] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:43:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:43:46] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:43:46] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:44:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:44:14] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:44:14] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:48:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:48:31] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:48:31] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:49:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:49:32] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:49:32] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:49:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:49:48] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 17:49:48] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 17:49:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:49:53] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a), Odontologo(matricula=abc-10-a)]
[2023-08-25 17:49:53] [ INFO ] [OdontologoControlador:56] Listado de odontologos
[2023-08-25 17:49:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:49:59] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 17:49:59] [ INFO ] [OdontologoControlador:67] odontologo encontrado.
[2023-08-25 17:50:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:50:05] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 17:50:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:50:05] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 17:50:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:50:05] [ INFO ] [db:80] Odontologo eliminado - ID >1
[2023-08-25 17:50:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 17:50:52] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-25 17:50:52] [ INFO ] [OdontologoControlador:56] Listado de odontologos
[2023-08-25 18:04:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:04:24] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:04:24] [ INFO ] [PacienteControlador:37] Paciente creado!
[2023-08-25 18:06:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:06:47] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:06:47] [ INFO ] [PacienteControlador:37] Paciente creado!
[2023-08-25 18:08:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:08:17] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:08:17] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:09:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:09:00] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:09:00] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:09:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:09:31] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:09:31] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:09:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:09:59] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:09:59] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:10:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:10:50] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 18:10:50] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 18:10:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:10:55] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 18:10:55] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 18:12:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:12:53] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 18:12:53] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-25 18:12:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:12:58] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:12:58] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:29:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:29:51] [ INFO ] [db:31] se registro un odontologo!
[2023-08-25 18:29:51] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-25 18:29:54] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:29:54] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-25 18:29:54] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-25 18:29:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:29:57] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 18:29:57] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-25 18:30:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:00] [ INFO ] [PacienteRepository:32] SE REGISTRO UN PACIENTE!
[2023-08-25 18:30:00] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 18:30:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:03] [ INFO ] [PacienteRepository:49] [Paciente(domicilio=ohiggins259, dni=123456789, fechaAlta=20-12-2023)]
[2023-08-25 18:30:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:08] [ ERROR] [PacienteRepository:68] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-25 18:30:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:13] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-25 18:30:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:26] [ INFO ] [PacienteRepository:66] PacienteId: 1
[2023-08-25 18:30:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:26] [ INFO ] [db:67] OdontologoId: 1
[2023-08-25 18:30:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 18:30:26] [ INFO ] [TurnoRepository:31] se registro un turno!
[2023-08-25 18:30:26] [ INFO ] [TurnoControlador:35] Se pudo crear el turno
[2023-08-25 21:45:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:45:51] [ ERROR] [PacienteRepository:67] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-25 21:45:51] [ ERROR] [PacienteControlador:37] Error al crear el domicilio
[2023-08-25 21:46:02] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:46:02] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[]
[2023-08-25 21:46:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:46:09] [ ERROR] [DomicilioRepository:72] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Domicilio.getId()" because "domicilio" is null
[2023-08-25 21:46:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:46:12] [ ERROR] [DomicilioRepository:72] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Domicilio.getId()" because "domicilio" is null
[2023-08-25 21:46:16] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:46:16] [ ERROR] [PacienteRepository:35] algo salio mal
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "DOMICILIO" no encontrada
Column "DOMICILIO" not found; SQL statement:
INSERT INTO PACIENTE(nombre,apellido,domicilio,dni,fecha_alta) VALUES(?,?,?,?,?) [42122-220]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1300)
	at org.h2.command.Parser.parseColumnList(Parser.java:1285)
	at org.h2.command.Parser.parseInsert(Parser.java:1672)
	at org.h2.command.Parser.parsePrepared(Parser.java:822)
	at org.h2.command.Parser.parse(Parser.java:697)
	at org.h2.command.Parser.parse(Parser.java:669)
	at org.h2.command.Parser.prepareCommand(Parser.java:577)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:634)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:288)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:191)
	at java.base/java.lang.Thread.run(Thread.java:1623)

	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.engine.SessionRemote.readException(SessionRemote.java:637)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:606)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:78)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:50)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:480)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.grupo4.integrador.repositorio.implementaciones.PacienteRepository.registrar(PacienteRepository.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.grupo4.integrador.repositorio.implementaciones.PacienteRepository$$SpringCGLIB$$0.registrar(<generated>)
	at com.grupo4.integrador.servicios.PacienteService.registrar(PacienteService.java:25)
	at com.grupo4.integrador.controladores.PacienteControlador.registarPaciente(PacienteControlador.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
[2023-08-25 21:46:16] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 21:47:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:47:04] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-25 21:47:04] [ INFO ] [PacienteControlador:38] Paciente creado!
<<<<<<< HEAD
[2023-08-25 21:47:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:47:44] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-25 21:47:44] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 21:47:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:47:49] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-25 21:47:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:47:53] [ INFO ] [PacienteRepository:65] PacienteId: 1
[2023-08-25 21:48:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:48:00] [ INFO ] [PacienteRepository:65] PacienteId: 1
[2023-08-25 21:48:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:48:00] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-25 21:48:00] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-25 21:48:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:48:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:48:14] [ INFO ] [PacienteRepository:65] PacienteId: 1
[2023-08-25 21:48:14] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=o'higgins, numero=286, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-25 21:51:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:51:47] [ INFO ] [PacienteRepository:65] PacienteId: 1
[2023-08-25 21:51:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:51:47] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-25 21:51:47] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-25 21:52:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:52:34] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-25 21:52:34] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-25 21:52:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:52:44] [ INFO ] [PacienteRepository:65] PacienteId: 2
[2023-08-25 21:52:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-25 21:52:44] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-25 21:52:44] [ INFO ] [PacienteControlador:40] Domicilio creado!
=======
[2023-08-27 22:08:47] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:08:47] [ INFO ] [db:31] se registro un odontologo!
[2023-08-27 22:08:47] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-27 22:08:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:08:55] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-27 22:08:55] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-27 22:09:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:09:05] [ INFO ] [PacienteRepository:65] PacienteId: 1
[2023-08-27 22:09:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:09:05] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 22:09:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:09:05] [ INFO ] [TurnoRepository:33] se registro un turno!
[2023-08-27 22:09:05] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-27 22:09:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:09:36] [ ERROR] [TurnoRepository:51] error al listar los pacientes
org.h2.jdbc.JdbcSQLFeatureNotSupportedException: Caracteristica no soportada: "converting to class com.grupo4.integrador.entidades.Odontologo"
Feature not supported: "converting to class com.grupo4.integrador.entidades.Odontologo" [50100-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:556)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:287)
	at org.h2.value.ValueToObjectConverter.valueToOther(ValueToObjectConverter.java:385)
	at org.h2.value.ValueToObjectConverter.valueToObject(ValueToObjectConverter.java:339)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:4196)
	at com.grupo4.integrador.repositorio.implementaciones.TurnoRepository.listar(TurnoRepository.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.grupo4.integrador.repositorio.implementaciones.TurnoRepository$$SpringCGLIB$$0.listar(<generated>)
	at com.grupo4.integrador.servicios.TurnoService.listar(TurnoService.java:40)
	at com.grupo4.integrador.controladores.TurnoControlador.listarTurnos(TurnoControlador.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-27 22:10:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:10:35] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-27 22:11:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 22:11:13] [ ERROR] [TurnoRepository:51] error al listar los pacientes
org.h2.jdbc.JdbcSQLFeatureNotSupportedException: Caracteristica no soportada: "converting to class com.grupo4.integrador.entidades.Odontologo"
Feature not supported: "converting to class com.grupo4.integrador.entidades.Odontologo" [50100-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:556)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.getUnsupportedException(DbException.java:287)
	at org.h2.value.ValueToObjectConverter.valueToOther(ValueToObjectConverter.java:385)
	at org.h2.value.ValueToObjectConverter.valueToObject(ValueToObjectConverter.java:339)
	at org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:4196)
	at com.grupo4.integrador.repositorio.implementaciones.TurnoRepository.listar(TurnoRepository.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.grupo4.integrador.repositorio.implementaciones.TurnoRepository$$SpringCGLIB$$0.listar(<generated>)
	at com.grupo4.integrador.servicios.TurnoService.listar(TurnoService.java:40)
	at com.grupo4.integrador.controladores.TurnoControlador.listarTurnos(TurnoControlador.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
[2023-08-27 23:33:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:33:10] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-27 23:33:10] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-27 23:34:05] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:34:05] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-27 23:34:05] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-27 23:34:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:34:18] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-27 23:34:18] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-27 23:34:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:34:35] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: []
[2023-08-27 23:34:35] [ INFO ] [TurnoControlador:52] listando turnos[]
[2023-08-27 23:35:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:06] [ INFO ] [db:31] se registro un odontologo!
[2023-08-27 23:35:06] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-27 23:35:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:21] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-27 23:35:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:21] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 23:35:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:21] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-27 23:35:21] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-27 23:35:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:31] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 23:35:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:35:31] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-27 23:35:31] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=null), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:35:31] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=Odontologo(matricula=null), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:42:36] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:42:36] [ INFO ] [db:31] se registro un odontologo!
[2023-08-27 23:42:36] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-27 23:42:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:42:46] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-27 23:42:46] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-27 23:42:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:42:57] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-27 23:42:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:42:57] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 23:42:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:42:57] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-27 23:42:57] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-27 23:43:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:04] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 23:43:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:04] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-27 23:43:04] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=null), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:43:04] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(matricula=null), paciente=PacienteDto(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:43:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:18] [ INFO ] [db:67] OdontologoId: 1
[2023-08-27 23:43:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:43:18] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-27 23:43:18] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=null), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:43:18] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(matricula=null), paciente=PacienteDto(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-27 23:46:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-27 23:46:18] [ INFO ] [db:31] se registro un odontologo!
[2023-08-27 23:46:18] [ INFO ] [OdontologoControlador:39] Odontologo creado.
>>>>>>> 65aba3cbf42f73679cb1d39d00ba0365b258aad2
[2023-08-28 13:39:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:39:45] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 13:39:45] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 13:39:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:39:52] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 13:39:52] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 13:40:01] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:01] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 13:40:01] [ ERROR] [PacienteControlador:37] Error al crear el domicilio
[2023-08-28 13:40:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:08] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 13:40:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:08] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 13:40:08] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 13:40:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:31] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 13:40:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:31] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 13:40:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:31] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 13:40:31] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 13:40:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:35] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 13:40:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:40:35] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 13:40:35] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=null), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 13:40:35] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(matricula=null), paciente=PacienteDto(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 13:41:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 13:41:22] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 13:41:22] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:09:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:09:19] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:09:19] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:09:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:09:59] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-28 14:09:59] [ ERROR] [OdontologoControlador:52] Error en convertir odontologos
[2023-08-28 14:13:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:13:55] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:13:55] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:17:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:17:23] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:17:23] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:17:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:17:43] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-28 14:17:43] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-28 14:19:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:24] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:19:24] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:19:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:30] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:19:30] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:19:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:37] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:19:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:37] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:19:37] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:19:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:46] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:19:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:46] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:19:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:19:46] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:19:46] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:21:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:21:55] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:21:55] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:22:00] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:00] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-28 14:22:00] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-28 14:22:04] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:04] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:22:04] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:22:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:10] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:22:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:10] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:22:10] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:22:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:26] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:22:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:26] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:22:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:26] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:22:26] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:22:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:28] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:22:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:22:28] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:22:28] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 14:22:29] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 14:31:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:10] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:31:10] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:31:14] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:14] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:31:14] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:31:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:19] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:19] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:19] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:31:19] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:31:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:23] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:23] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:31:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:34] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:31:34] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:31:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:40] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:40] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:31:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:40] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:31:40] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:31:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:45] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:31:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:45] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:31:45] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:45] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:31:45] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:31:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:49] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:31:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:49] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:49] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-28 14:31:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:49] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:49] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50), Turno(id=2, odontologo=null, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 14:31:49] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50), TurnoDto(id=2, odontologo=null, paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 14:31:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:31:59] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:31:59] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:32:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:32:10] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:32:10] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:32:10] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:32:10] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:32:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:32:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:32:15] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:32:15] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:32:15] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:32:15] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires), Domicilio(id=2, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:33:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:33:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:33:49] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:33:49] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:33:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:33:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:33:55] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:33:55] [ INFO ] [DomicilioRepository:70] DomicilioId: 2
[2023-08-28 14:34:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:03] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:34:03] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:34:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:09] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:34:09] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:34:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:09] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:34:09] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:34:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:09] [ INFO ] [DomicilioRepository:84] Domicilio eliminado - paciente_id = 1
[2023-08-28 14:34:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:13] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:13] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:34:13] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=2, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:34:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:23] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023), Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:34:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:30] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-28 14:34:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:52] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:34:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:52] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:34:52] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:52] [ ERROR] [PacienteRepository:80] Error eliminando el Paciente.
[2023-08-28 14:34:55] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:55] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023), Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:34:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:34:59] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023), Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:35:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:35:22] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:35:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:35:22] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:35:22] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:35:22] [ ERROR] [PacienteRepository:80] Error eliminando el Paciente.
[2023-08-28 14:36:06] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:36:06] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:37:42] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:37:42] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:37:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:37:53] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:37:53] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:37:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:37:59] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:38:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:03] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:38:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:08] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:38:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:08] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:38:08] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:08] [ INFO ] [PacienteRepository:78] Paciente eliminado - ID >1
[2023-08-28 14:38:08] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 14:38:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:17] [ INFO ] [PacienteRepository:48] []
[2023-08-28 14:38:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:20] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:38:20] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:38:23] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:23] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:38:23] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:38:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:28] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:38:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:34] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:38:34] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:34] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:38:34] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:38:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:37] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:38:37] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:38:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:43] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:38:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:43] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:38:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:43] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:38:43] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:38:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:48] [ ERROR] [db:69] Odontologo no encontrado. java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Odontologo.getId()" because "odontologo" is null
[2023-08-28 14:38:48] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:38:48] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:38:48] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=null, paciente=null, fecha=30-09-2023/16:50)]
[2023-08-28 14:38:48] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=null, paciente=null, fecha=30-09-2023/16:50)]
[2023-08-28 14:39:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:44] [ ERROR] [DomicilioRepository:72] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Domicilio.getId()" because "domicilio" is null
[2023-08-28 14:39:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:50] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:39:50] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:39:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:59] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:39:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:59] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:39:59] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:39:59] [ ERROR] [PacienteRepository:80] Error eliminando el Paciente.
[2023-08-28 14:39:59] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 14:40:21] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:21] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:40:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:32] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:32] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:40:32] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:40:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:38] [ ERROR] [DomicilioRepository:72] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Domicilio.getId()" because "domicilio" is null
[2023-08-28 14:40:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:43] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:40:43] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:40:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:43] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:40:43] [ INFO ] [DomicilioRepository:70] DomicilioId: 1
[2023-08-28 14:40:43] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:43] [ INFO ] [DomicilioRepository:84] Domicilio eliminado - paciente_id = 2
[2023-08-28 14:40:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:50] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:40:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:53] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:40:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:53] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:40:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:40:53] [ ERROR] [PacienteRepository:80] Error eliminando el Paciente.
[2023-08-28 14:40:53] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 14:41:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:41:26] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:42:56] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:42:56] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[]
[2023-08-28 14:45:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:33] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:45:33] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:45:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:37] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:45:37] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:45:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:40] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:45:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:40] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:45:40] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-28 14:45:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:46] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:45:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:46] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:45:46] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:46] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:45:46] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:45:51] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:51] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:45:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:57] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:45:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:57] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:45:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:45:57] [ INFO ] [PacienteRepository:78] Paciente eliminado - ID >1
[2023-08-28 14:45:57] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 14:46:02] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:46:02] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: []
[2023-08-28 14:46:02] [ INFO ] [TurnoControlador:52] listando turnos[]
[2023-08-28 14:49:09] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:09] [ INFO ] [db:50] [Odontologo(matricula=abc-10-a)]
[2023-08-28 14:49:09] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-28 14:49:12] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:12] [ INFO ] [PacienteRepository:48] []
[2023-08-28 14:49:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:17] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:49:17] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:49:20] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:20] [ INFO ] [PacienteRepository:48] [Paciente(dni=123456789, fechaAlta=20-12-2023)]
[2023-08-28 14:49:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:24] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:49:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:24] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:49:24] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:49:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:29] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:49:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:29] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:49:29] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:29] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:49:29] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 14:49:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:35] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:49:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:35] [ INFO ] [PacienteRepository:64] PacienteId: 2
[2023-08-28 14:49:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:35] [ INFO ] [PacienteRepository:78] Paciente eliminado - ID >2
[2023-08-28 14:49:35] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 14:49:40] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:40] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[]
[2023-08-28 14:49:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:49:50] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: []
[2023-08-28 14:49:50] [ INFO ] [TurnoControlador:52] listando turnos[]
[2023-08-28 14:59:24] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:24] [ INFO ] [db:31] se registro un odontologo!
[2023-08-28 14:59:24] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-28 14:59:31] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:31] [ INFO ] [PacienteRepository:31] SE REGISTRO UN PACIENTE!
[2023-08-28 14:59:31] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-28 14:59:37] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:37] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:59:37] [ ERROR] [PacienteControlador:37] Error al crear el domicilio
[2023-08-28 14:59:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:41] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:59:41] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:41] [ INFO ] [DomicilioRepository:36] SE REGISTRO UN DOMICILIO!
[2023-08-28 14:59:41] [ INFO ] [PacienteControlador:40] Domicilio creado!
[2023-08-28 14:59:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:44] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:59:44] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 14:59:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:50] [ ERROR] [PacienteRepository:66] Paciente no encontrado.java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.entidades.Paciente.getId()" because "paciente" is null
[2023-08-28 14:59:50] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:50] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:59:50] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-28 14:59:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:58] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 14:59:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:58] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 14:59:58] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 14:59:58] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 14:59:58] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 15:00:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:03] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:00:03] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:03] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:00:03] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:00:03] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:18] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:00:18] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:18] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:00:18] [ INFO ] [TurnoRepository:70] se encontro el siguiente turno: Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)
[2023-08-28 15:00:18] [ INFO ] [TurnoControlador:63] se encontro el siguiente turno:Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:00:25] [ INFO ] [TurnoRepository:70] se encontro el siguiente turno: Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:00:25] [ INFO ] [TurnoRepository:70] se encontro el siguiente turno: Turno(id=1, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)
[2023-08-28 15:00:25] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:25] [ INFO ] [TurnoRepository:83] TURNO eliminado - ID >1
[2023-08-28 15:00:30] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:30] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: []
[2023-08-28 15:00:30] [ INFO ] [TurnoControlador:52] listando turnos[]
[2023-08-28 15:00:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:33] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:00:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:33] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:00:33] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:00:33] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 15:00:33] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 15:02:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:17] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:17] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:17] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:17] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=2, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:02:17] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=2, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:02:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:26] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:26] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:26] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:26] [ INFO ] [TurnoRepository:38] se registro un turno!
[2023-08-28 15:02:26] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-28 15:02:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:28] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:28] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:28] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:28] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:28] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:28] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: [Turno(id=2, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50), Turno(id=3, odontologo=Odontologo(matricula=abc-10-a), paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:02:28] [ INFO ] [TurnoControlador:52] listando turnos[TurnoDto(id=2, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50), TurnoDto(id=3, odontologo=OdontologoDto(), paciente=PacienteDto(fechaAlta=20-12-2023), fecha=30-09-2023/16:50)]
[2023-08-28 15:02:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:35] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:35] [ INFO ] [db:67] OdontologoId: 1
[2023-08-28 15:02:35] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:35] [ INFO ] [db:80] Odontologo eliminado - ID >1
[2023-08-28 15:02:38] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:38] [ INFO ] [TurnoRepository:54] se encontrarons los siguientes turnos: []
[2023-08-28 15:02:38] [ INFO ] [TurnoControlador:52] listando turnos[]
[2023-08-28 15:02:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:44] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:44] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:44] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[Domicilio(id=1, paciente=Paciente(dni=123456789, fechaAlta=20-12-2023), calle=av san martin, numero=180, localidad=ramos mejia, provincia=buenos aires)]
[2023-08-28 15:02:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:49] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:49] [ INFO ] [PacienteRepository:64] PacienteId: 1
[2023-08-28 15:02:49] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:49] [ INFO ] [PacienteRepository:78] Paciente eliminado - ID >1
[2023-08-28 15:02:49] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-28 15:02:53] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:53] [ INFO ] [DomicilioRepository:57] Lista de domicilios :[]
[2023-08-28 15:02:57] [ INFO ] [db:23] Conexion exitosa a la db.
[2023-08-28 15:02:57] [ INFO ] [PacienteRepository:48] []
[2023-08-29 19:37:03] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 19:37:32] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 19:37:36] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-29 19:38:33] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-29 19:38:43] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-29 19:38:54] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 19:38:57] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 19:39:04] [ ERROR] [PacienteControlador:35] Error al crear al paciente
[2023-08-29 19:39:54] [ ERROR] [PacienteControlador:35] Error al crear al paciente
[2023-08-29 19:42:04] [ ERROR] [PacienteControlador:35] Error al crear al paciente
[2023-08-29 19:48:43] [ ERROR] [PacienteControlador:35] Error al crear al paciente
[2023-08-29 20:00:39] [ ERROR] [PacienteControlador:35] Error al crear al pacientejava.time.format.DateTimeParseException: Text '20-12-2023' could not be parsed at index 0
[2023-08-29 20:12:43] [ ERROR] [PacienteControlador:35] Error al crear al pacientejava.time.format.DateTimeParseException: Text '20-12-2023' could not be parsed at index 0
[2023-08-29 20:14:07] [ ERROR] [PacienteControlador:35] Error al crear al pacienteorg.springframework.dao.InvalidDataAccessApiUsageException: Entity must not be null
[2023-08-29 20:15:02] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 20:34:11] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 20:34:14] [ ERROR] [PacienteControlador:35] Error al crear al paciente java.lang.NullPointerException: Cannot invoke "com.grupo4.integrador.dto.DomicilioDto.CrearDomicilioDto.getProvincia()" because the return value of "com.grupo4.integrador.dto.PacienteDto.CrearPacienteDto.getDomicilio()" is null
[2023-08-29 20:34:57] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 20:52:02] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 20:52:52] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 20:53:25] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 20:53:30] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 20:53:35] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-29 21:01:07] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 21:01:11] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 21:01:23] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 21:01:27] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 21:01:33] [ INFO ] [OdontologoControlador:66] odontologo encontrado.
[2023-08-29 21:01:37] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:02:16] [ INFO ] [PacienteControlador:80] El paciente fue elimninado
[2023-08-29 21:05:45] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-29 21:05:50] [ INFO ] [OdontologoControlador:55] Listado de odontologos
[2023-08-29 21:05:56] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:06:04] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 21:09:03] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 21:09:06] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:09:21] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-29 21:09:31] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 21:17:52] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:18:01] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 21:18:04] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-29 21:18:20] [ ERROR] [TurnoControlador:35] No se pudo crear el turno
[2023-08-29 21:28:49] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 21:28:54] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:29:06] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 21:29:11] [ INFO ] [TurnoControlador:66] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=30-09-2023/16:50)]
[2023-08-29 21:29:35] [ ERROR] [TurnoControlador:49] No se pudo crear el turno
[2023-08-29 21:40:18] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 21:40:21] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 21:40:24] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 21:40:43] [ INFO ] [TurnoControlador:69] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=30-09-2023/16:50)]
[2023-08-29 21:40:52] [ ERROR] [TurnoControlador:50] No se pudo crear el turno
[2023-08-29 22:57:44] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 22:57:47] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 22:57:50] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 22:57:55] [ ERROR] [TurnoControlador:49] No se pudo crear el turno
[2023-08-29 23:09:40] [ INFO ] [OdontologoControlador:39] Odontologo creado.
[2023-08-29 23:09:43] [ INFO ] [PacienteControlador:38] Paciente creado!
[2023-08-29 23:09:46] [ INFO ] [TurnoControlador:38] Se pudo crear el turno
[2023-08-29 23:09:55] [ ERROR] [TurnoControlador:65] No se pudo actualizar el turno
[2023-08-29 23:12:06] [ INFO ] [TurnoControlador:68] Se pudo crear el turno
[2023-08-29 23:12:12] [ INFO ] [TurnoControlador:54] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=10-010-2023/16:50)]
[2023-08-30 11:13:53] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-30 11:13:57] [ INFO ] [PacienteControlador:39] Paciente creado!
[2023-08-30 11:14:05] [ INFO ] [TurnoControlador:40] Se pudo crear el turno
[2023-08-30 11:14:15] [ INFO ] [TurnoControlador:55] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=30-09-2023/16:50)]
[2023-08-30 11:14:19] [ INFO ] [TurnoControlador:69] Se pudo crear el turno
[2023-08-30 11:14:29] [ INFO ] [TurnoControlador:55] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=10-010-2023/16:50)]
[2023-08-30 11:14:39] [ INFO ] [PacienteControlador:39] Paciente creado!
[2023-08-30 11:14:51] [ INFO ] [OdontologoControlador:40] Odontologo creado.
[2023-08-30 11:14:59] [ INFO ] [TurnoControlador:40] Se pudo crear el turno
[2023-08-30 11:15:02] [ INFO ] [TurnoControlador:55] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=10-010-2023/16:50), TurnoDto(id=2, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=2, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=2, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=30-09-2023/16:50)]
[2023-08-30 11:16:51] [ INFO ] [TurnoControlador:69] Se pudo crear el turno
[2023-08-30 11:16:54] [ INFO ] [TurnoControlador:55] listando turnos[TurnoDto(id=1, odontologo=OdontologoDto(id=1, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=1, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=1, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=10-010-2023/16:50), TurnoDto(id=2, odontologo=OdontologoDto(id=2, nombre=pedro, apellido=velazquez), paciente=PacienteDto(id=2, nombre=carlos, apellido=perez, fechaAlta=20-12-2023, domicilio=Domicilio(id=2, calle=av san martin, numero=190, localidad=ramos mejia, provincia=buenos aires, paciente=null)), fecha=10-010-2023/16:50)]
[2023-08-30 11:17:18] [ ERROR] [TurnoControlador:66] No se pudo actualizar el turno
[2023-08-30 11:17:27] [ ERROR] [TurnoControlador:66] No se pudo actualizar el turno
